//Code below is for GPS P6H0171327 
//GTPA013 with pins5,7
gpsline<-"";
gpsToServer<-"";
lat<-"";
lon<-"";
voMeasured<-"";
constant<- gpsline;
//paANDth 
paANDth<-"";
//configure humidity/temp sensor & altitude sensor
hardware.i2c89.configure(CLOCK_SPEED_400_KHZ);

//using to replace ,, || , with something else
function StringReplace(string, original, replacement)
{
  // make a regexp that will match the substring to be replaced
  local expression = regexp(original);

  local result = "";
  local position = 0;

  // find the first match
  local captures = expression.capture(string);

  while (captures != null)
  {
    foreach (i, capture in captures)
    {
      // copy from the current position to the start of the match
      result += string.slice(position, capture.begin);
      // add the replacement substring instead of the original
      result += replacement;

      position = capture.end;
    }

    // find the next match
    captures = expression.capture(string, position);
  }

  // add any remaining part of the string after the last match
  result += string.slice(position);

  return result;
}

function gpsData() {
  local b = hardware.uart57.read();
  gpsToServer = "";
  while(b != -1) {
    if (b < 32) {
      if (gpsline.len() > 0) {
        local ex = regexp("[$]GPRMC.+");
        local pi = ex.match(gpsline);
        if (ex.match(gpsline)) {
          local string = gpsline;
          string = StringReplace(string, ",,", ",>,");
          string = StringReplace(string, ",,", ",>,");
          string = StringReplace(string, ",,", ",>,");
          local sp = split(string, ",");
          server.log(sp[3] + "_" + sp[4] + "_" + sp[5] + "_" + sp[6]);
          gpsToServer = sp[3] + "_" + sp[4] + "_" + sp[5] + "_" + sp[6];
          lat = sp[3] + "_" + sp[4];
          lon = sp[5] + "_" + sp[6];
          hardware.uart57.disable();
          //agent.send("GPS", gpsToServer);
          return;
        }
      }
      gpsline="";
    } else {
      gpsline += b.tochar();
    }
    b=hardware.uart57.read();
  }
}

function readPressureInchesGH() {
  local a = (0x5d << 1);
  local press = hardware.i2c89.read(a, "\xa8", 3);
  local pressure = (press[2] << 16) + (press[1] << 8) + (press[0]);
  //2's compliment if the number is negative
  if (0x800000 & pressure) pressure = -(0x1000000-pressure);
  pressure = pressure/138706.5;
  return pressure;
}

// converts pressure in mbar to altitude in meters, using 1976 US
// Standard Atmosphere model (note that this formula only applies to a
// height of 11 km, or about 36000 ft)
//  If altimeter setting (QNH, barometric pressure adjusted to sea
//  level) is given, this function returns an indicated altitude
//  compensated for actual regional pressure; otherwise, it returns
//  the pressure altitude above the standard pressure level of 1013.25
//  mbar or 29.9213 inHg
function pressureToAltitudeFeet(pressureA, stanPres) {
  local a = math.pow(pressureA/stanPres, 0.190263);
  local altitude = (1 - a) * 145442;
  return altitude;
}

function particles() {
  //make shorter pin5 name
  local pin5 = hardware.pin5;
  //make shorter pin1 name
  local pin1 = hardware.pin1;

  //configure pin5 to turn on/off led
  //led is used to sense dust particles
  pin5.configure(DIGITAL_OUT);
  //configure pin1 to read voltage
  //of dust sensor, will later involve
  //algorithm to calculate dust density
  pin1.configure(ANALOG_IN);

  //turn led on
  pin5.write(0);
  //take time to sample
  imp.sleep(0.0000028);
  //read dust value
  voMeasured = pin1.read();
  //take some more delay time
  imp.sleep(0.00000040);
  //turn led off
  pin5.write(1);
  //take some more delay time
  imp.sleep(0.00009680);

  //this portion takes it from 
  //raw number to dustDensity

  //0-3.3V mapped to 0-65,535 integer value
  //recover voltage based in slope intercept
  //of voltage versus reading
  local calcVoltage = (2.7/65535)*voMeasured + 0.6;
  //recover dust density based on slope intercept
  //of dust density versus voltage given in 
  //Sharp's datasheet via sparkfun
  local dustDensity = (calcVoltage - 0.6)/6.0;

  //log answer
  server.log("Raw Signal Value (0-65,535): " + voMeasured);
  server.log("Voltage: " + calcVoltage);
  server.log("Dust Density: " + dustDensity);
  //local str = format("str1=%d", voMeasured);
  //agent.send("logData", str);
}

//funtion sends pressure, altitue
//function to read pressure, altitude, temp
function readPATH() {
  local a = (0x5d << 1);
  //turn sensor on
  hardware.i2c89.write(a,"\x20\xe0");
  //wait .5 seconds
  imp.sleep(0.5);
  //do work of getting pressure
  local pressureA = readPressureInchesGH();
  //do work of getting altitude
  local altitude = pressureToAltitudeFeet(pressureA, 29.9213);
  //turn sensor off
  hardware.i2c89.write(a,"\x20\x00");
  //reading temperature and humidity
  local alsAddr = 0x40;
  //write to temp sensor
  hardware.i2c89.write(alsAddr<<1,"\xf3");
  imp.sleep(0.5);
  //read temp
  local a = hardware.i2c89.read(alsAddr<<1, "", 3);
  //write to humidity sensor
  hardware.i2c89.write(alsAddr<<1,"\xf5");
  imp.sleep(0.5);
  //read humidity
  local b = hardware.i2c89.read(alsAddr<<1, "", 3);
  //move bits together to make float
  local temp = ((a[0] <<8) + (a[1] & 0xfc)) * 1.0;
  local hum = ((b[0] <<8) + (b[1] & 0xf0)) * 1.0;
  //do algorithm to find temp and humidity
  local newTemp = (-46.85 + (175.72 * (temp/65536.00)));
  local newHum = -6 + (125 * (hum/65536.00));
  newTemp = newTemp * 1.8 + 32;
  //logging things to server
  server.log("pressure: " + pressureA + " inHG");
  server.log("altitude: " + altitude + " ft");
  server.log("temp: " + newTemp);
  server.log("humidity: " + newHum);
  local gpsToServer;
  //local everything = newTemp + "_" + altitude + "_" + newHum + "_" + pressureA + "_" + 43.81 + "_" + -91.23 + "_" + voMeasured + "_" + "1";
  local everything = newTemp + "_" + altitude + "_" + newHum + "_" + pressureA + "_" + 43.81 + "_" + -91.23 + "_" + "1";
  //local str = format("newTemp=%f&altitude=%f&newHum=%f&pressureA=%f&latitude=%f&longitude=%f&particles=%f&imp=%s",
   //                    newTemp, altitude, newHum, pressureA, 43.81, -91.23, 2222,"235960eb6e493ee");
  //agent.send("logData",str);
  agent.send("everything", everything);
}

function start() {
  local count = 0;
  particles();
  readPATH();
  //configure hardware
  //read out gps data
  hardware.uart57.configure(9600, 8, PARITY_NONE, 1, NO_CTSRTS, gpsData);
  imp.wakeup(900, start);
}
//Main Execution loop
function loop() {
  //calls pressure function
  agent.on("start", start);
}

server.log("Device On");
start();
//loop();
