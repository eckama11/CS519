// Code below this line is for your node.
// Drive 3.3v LCD Screen using a Sparkfun SerLCD backpack from an Electric IMP

hardware.uart12.configure(9600, 8, PARITY_NONE, 1, NO_RX);

CharactersInLCD     <- 16;
Message             <- "Hello World";

//Backlight brightness values from 128 to 157
//128 - Backlight off
//140 - 40% on
//150 - 73% on
//157 - 100% on
function LCDBacklight(Brightness)
{
    if((Brightness>127)&&(Brightness<158))
    {
        hardware.uart12.write(124);
        hardware.uart12.write(Brightness); 
    }
}

//Sets the SerLCD module to the correct LCD Type.
//3 - 20 Characters wide
//4 - 16 Characters wide
//5 - 4 Lines
//6 - 2 Lines
function SerLCDTypeSetup(LCDType)
{
    if((LCDType>3)||(LCDType<4)||(LCDType<5)||(LCDType<6))
    {
        hardware.uart12.write(124);
        hardware.uart12.write(LCDType); 
    }
}

//Sets the splash screen.
function LCDSetSplash(Message)
{
    LCDClear();
    hardware.uart12.write(Message);

    imp.sleep( 1 );
   
    hardware.uart12.write(0x7C);
    hardware.uart12.write(0x0A);
   
    imp.sleep( 1 );
}

//Splash screen on/off toggle
function LCDToggleSplash()
{
    hardware.uart12.write(0x7C);
    hardware.uart12.write(0x09);
}


function LCDClear()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x01);
    hardware.uart12.write(254);
    hardware.uart12.write(128);
    LCDBoxCursorOff();
}

function LCDMoveCursorRight()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x14);
}

function LCDMoveCursorLeft()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x10);
}

function LCDScrollRight()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x1c); 
}

function LCDScrollLeft()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x18); 
}

function LCDVisualDisplayOn()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x0C);
}

function LCDVisualDisplayOff()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x08);
}

function LCDUnderlineCursorOn()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x0E);
}

function LCDUnderlineCursorOff()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x0C);
}

function LCDBoxCursorOn()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x0D);
}

function LCDBoxCursorOff()
{
    hardware.uart12.write(254);
    hardware.uart12.write(0x0C);
}

// Position is zero based
function LCDSetCursorPosition(Line,Position)
{
    local LineBaseAddress = 0;
    if(CharactersInLCD==16)
    {
        if(Line==2)
        {
            LineBaseAddress = 64;
        }
         if(Line==3)
        {
            LineBaseAddress = 16;
        }
         if(Line==4)
        {
            LineBaseAddress = 80;
        }
    }
    if(CharactersInLCD==20)
    {
         if(Line==2)
        {
            LineBaseAddress = 64;
        }
         if(Line==3)
        {
            LineBaseAddress = 20;
        }
         if(Line==4)
        {
            LineBaseAddress = 84;
        }
    }
    hardware.uart12.write(254);
    hardware.uart12.write(LineBaseAddress + Position + 128);
}

function LCDWriteMessage(LCDMessage)
{
    hardware.uart12.write(LCDMessage);
}

//Main Execution loop
function loop()
{
    //Loop Activities - executed once every Wakeup
    imp.wakeup(2.0, loop);
}


//Setup Activities - only executed once

LCDClear(); 

LCDWriteMessage(Message);
LCDBacklight(140);

//Pause 2 Seconds before starting the main loop - adjust to taste
imp.wakeup(2.0, loop);